import * as modelos from './models/modelos';
export declare class AppService {
    getEspecialidadBox(): Promise<object>;
    getTipoFuncionario(): Promise<object>;
    getPaciente(): Promise<object>;
    getBox(): Promise<object>;
    getFuncionario(): Promise<object>;
    getAgendamiento(): Promise<object>;
    getResultadosConsulta(): Promise<object>;
    getEstadoAgendamiento(): Promise<object>;
    postPaciente(): Promise<modelos.Persona>;
    postBox(): Promise<modelos.Box>;
    postFuncionario(): Promise<modelos.Funcionario>;
    postAgendamiento(): Promise<object>;
    getAgendamientoEspecialidad(especialidad: string): Promise<object>;
    getCountAgendamientosPorEspecialidad(): Promise<Array<modelos.Agendamiento>>;
    getCountAgendamientosPorEspecialidadRangoFechas(fecha_inicio: string, fecha_final: string): Promise<Array<modelos.Agendamiento>>;
    getAgendamientoFecha(fecha1: string, fecha2: string): Promise<Array<modelos.Agendamiento>>;
    getAgendamientoEspecialidadFecha(especialidad: string, fecha1: string, fecha2: string): Promise<Array<modelos.Agendamiento>>;
    postAgendamientoPersonalizado(idBox: number, idFuncionario: number, idPaciente: number, fecha: string, horaEntrada: string, horaSalida: string): Promise<object>;
    postUsuario(nombre: string, contraseña: string, rol: string, adicional?: any): Promise<modelos.Usuario>;
    getUsuario(nombre: string): Promise<modelos.Usuario>;
    verificador(nombre: string, contraseña: string): Promise<boolean>;
    Query1(fecha1: string, fecha2: string): Promise<object>;
    Query2(fecha: string, hora: string): Promise<object>;
    Query3(especialidad: string, fecha: string): Promise<number>;
    Query4(fecha: string, hora: string): Promise<object>;
    postAgendamientoSUPREMUS(fecha: string, horaEntrada: string, horaSalida: string): Promise<boolean>;
    disponibilidad(box: number, fecha: string): Promise<Array<string>>;
    eliminarAgendamiento(id: number): Promise<boolean>;
    usoBox(idbox: string, fecha: string, hora: string): Promise<object>;
    agendamientosPorFecha(fecha: string): Promise<object>;
    updateEstadoSimulaConsulta(idagendamiento: number): Promise<object>;
    updateEstado(idagendamiento: number, nuevoEstado: string): Promise<object>;
    agendamientosPorConfirmar(): Promise<Array<modelos.Agendamiento>>;
    boxesLibres(fecha: string, hora: string): Promise<Array<modelos.Box>>;
    cambioAgendamiento(fecha1: string, fecha2: string): Promise<object>;
    agendamientoTotalHoyBox(idbox: number, fecha: string): Promise<object>;
    agendamientosPendientesBox(idbox: number, fecha: string): Promise<object>;
    proximoAgendamientoBox(idbox: number, fecha: string, hora: string): Promise<string>;
    cantidadAgendamientosEntreFechas(fecha1: string, fecha2: string): Promise<number>;
    funcionariosFull(): Promise<object>;
    pacientesNoAtendidos(fecha: string): Promise<object>;
    pacientesAtendidos(fecha: string): Promise<object>;
    diferenciaOcupanciaMeses(mes1: string, mes2: string): Promise<number>;
}
